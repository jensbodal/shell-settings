# vi: ft=zsh

alias gs="git status"
alias hist="history"
alias ll="ls -la"
alias s="source ~/.zshrc && hash -r && if type direnv > /dev/null; then direnv reload; fi"

# functions
alias asdf-install=__asdf-install
alias asdf-update=__asdf-update
alias caff=__caff
alias cdf=__cdf
alias cdt=__cdt
alias dns=__dns
alias ff=__ff
alias fif=__fif
alias git-set-origin=__git-set-origin
alias git-vim-status=__git-vim-status
alias screen=__screen
alias ssh-keygen-secure=__ssh-keygen-secure
alias usingport=__usingport
alias whatsmyip=__whatsmyip
alias whereami=__whereami

################################################################
# aliasing these to functions breaks functionality
function cd() {
  if [ $# -eq 1 -a -f "$@" ]; then
    echo "file found, changing to parent directory"
    cdf "$1"
    return $?
  fi

  if [ "$1" != "-" -a ! -d "$@" ]; then
    echo "no such directory: $@"
    return 1
  fi

  builtin cd "$@" && echo "$OLDPWD --> $PWD"
}
################################################################

__asdf-install() {
  if [ -z $1 ]; then
    echo "missing plugin name"
    return
  fi

  asdf plugin add "$1"
  asdf install "$1" latest
  asdf global "$1" latest
}

__asdf-update() {
  asdf update
  for tool in $(asdf plugin list); do
    asdf install "${tool}" latest  \
      &&  asdf global "${tool}" latest  \
      &&  echo "${tool} set globally"
    done
}

__caff() {
  if command -v caffeinate &> /dev/null
  then
    caffeinate -disu
  else
    echo "caffeinate not supported"
  fi
}

__cdf() {
  cd "$(dirname "$1")"
}


# cd to file or folder
__cdt() {
  while [[ $PWD != '/' && `basename $PWD` != "$1" && ! -f "$1" ]]; do cd ..; done
}

__dns() {
  domain="$1"
  echo "[nameservers]"
  dig +short "$domain" ns
  echo "[a records]"
  dig +short "$domain" a
  echo "[cname records]"
  dig +short "$domain" cname
  echo "[txt records]"
  dig +short "$domain" txt
  echo "[mx records]"
  dig +short "$domain" mx
  echo "[aaaa records]"
  dig +short "$domain" aaaa
  echo "[srv records]"
  dig +short "$domain" srv
}

# find file
__ff() {
  local needle="${1:- }"
  local grepopts="$2"

  find . -iname "*$needle*" -type f | grep "$needle" $grepopts
}

# find in file
__fif() {
  grep "$@" -r . | grep "$@"
}

__git-set-origin() {
  local remote="${1:-origin}"
  local currentbranch=$(git rev-parse --abbrev-ref HEAD)

  local gitpath="$remote/$currentbranch"
  echo "Setting upstream to \"$gitpath\""
  git branch --set-upstream-to="$gitpath"
}

__git-vim-status() {
  vim -p $(git status -s | sed -r 's#^(.*->)?[ARMU? ]+(.*)$#\2#')
}

__screen() {
  if [[ ! $1 =~ ^- ]]; then
    if [[ $1 == "ls" ]]; then
      command screen -ls
      return $?
    fi

    command screen -RR -S "$1"
    return $?
  fi

  command screen "$@"
  return $?
}

__ssh-keygen-secure() {
  ssh-keygen -t ed25519 -a 100
}

__usingport() {
  port=`echo "$@" | egrep -o "\d+"`
  dokill=`echo "$@" | egrep -o "\-k"`

  results=`lsof -i -n -P | grep TCP | egrep ":$port \(LISTEN\)"`
  echo "$results" | egrep ":$port"

  pids=`echo $results | awk '{print $2}' ORS=' '`

  if [ ! -z $dokill ]; then
    echo $pids | xargs kill -9
  else
    if [ -z $results ]; then
      len=${#results}
      if [ $len -gt 1 ]; then
        echo "\n> pass -k to kill all matching processes"
      fi
    fi
  fi
}

__whatsmyip() {
  echo "curl checkip.amazonaws.com"
  curl checkip.amazonaws.com
  echo "dig +time=2 +tries=1 +short myip.opendns.com @resolver1.opendns.com"
  dig +time=2 +tries=1 +short myip.opendns.com @resolver1.opendns.com
  echo "curl ifconfig.co"
  curl ifconfig.co
}

__whereami() {
  whatsmyip
  echo "$USER@$HOST [$PWD]"
}
