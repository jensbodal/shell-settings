#!/bin/bash
# vi: ft=sh

WORK_DIR="${HOME}/local/lib/automator/testing"
CACHE_DIR="${WORK_DIR}/cache"
LOGS_DIR="${WORK_DIR}/logs"
CACHE_LAST_RUN="${CACHE_DIR}/.last_run"
CACHE_LAST_EXIT="${CACHE_DIR}/.last_exit"
NOW=`date +%s`
DEFAULT_TIMEOUT=7.5
TIMEOUT=${1:=$DEFAULT_TIMEOUT}
LOG_FILE="${LOGS_DIR}/testing.output.log"

if [ $# -eq 1 ]; then
  echo "Setting timeout to ${TIMEOUT}m"
fi

echo "[testing] Setting LAST_START and LAST_EXIT to \"$NOW\""
mkdir -p $CACHE_DIR
mkdir -p $LOGS_DIR
echo "$NOW" > "$CACHE_LAST_RUN"
echo "$NOW" > "$CACHE_LAST_EXIT"
echo "[testing] [`date`] Testing feasibility of dependency bot" | tee $LOG_FILE
echo ""

echo "Clearing screen in 2s..."
#sleep 2
clear
echo "#############################################"
echo "######## TESTING FOR SCRIPT AUTOMATION ######"
echo "#############################################"
echo ""

trap exit EXIT

exit() {
  echo "Exiting..."
  echo "Killing child PIDs: [$(pgrep -P $$ | tr '\n' ' ' | awk '{$1=$1};1')]"
  kill $(pgrep -P $$)
  echo "`date +%s`" > "$CACHE_LAST_EXIT"
  # pkill -P "$$" 2>&1 > /dev/null
}

tail $LOG_FILE -f &
logspid=$!

/Volumes/github/shell-settings/scripts/caff &
logspid="$logspid $!"

echo "[testing] [`date`] Child pids: | \$logspid [$logspid] | \$\$ [$$] |" | tee -a $LOG_FILE

/usr/bin/automator -i "$(($TIMEOUT * 60))" /Volumes/github/shell-settings/macos/automator/testing.workflow
wait
