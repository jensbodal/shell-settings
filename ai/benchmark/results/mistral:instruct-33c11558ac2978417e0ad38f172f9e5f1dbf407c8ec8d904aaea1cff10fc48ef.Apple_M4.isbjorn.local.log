⠙ ⠹ ⠸ ⠼  For your requirement, you can set up a containerized remote desktop environment on Proxmox that supports macOS (preferred), Linux, and Windows. One popular solution for this scenario is using Docker containers with Remote Desktop Services (RDS) or Virtual Network Computing (VNC). Here's an outline of the steps to create such an environment:

1. Install Docker on Proxmox:
   - SSH into your Proxmox server and run the following commands to install Docker:
     ```
     curl -fsSL https://get.docker.com/ | sh
     systemctl enable docker
     systemctl start docker
     ```

2. Install Docker Compose on Proxmox:
   - Run the following command to download and install Docker Compose:
     ```
     curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
     chmod +x /usr/local/bin/docker-compose
     ```

3. Create a Dockerfile for your desired operating system (macOS, Linux, or Windows). Here's an example Dockerfile for macOS:

   ```Dockerfile
   FROM docker.apple.com/applecloudservices/quickstart:10.15.7-highsierra
   ARG GUEST_USER=guest
   ENV HOME="/Users/${GUEST_USER}"
   RUN mkdir -p ${HOME}/Library/Application Support/Steam && \
       chmod 700 /Users/${GUEST_USER}/Library/Application\ Support/Steam && \
       echo 'Steam' > ${HOME}/Library/Preferences/ByHost/com.valvesoftware.Steam.plist
   RUN mkdir -p ${HOME}/Applications/3D-Printer-Software && \
       chmod 700 /Users/${GUEST_USER}/Applications/3D-Printer-Software
   USER ${GUEST_USER}
   ```

   Replace the commands in the Dockerfile with the necessary ones to install and configure your preferred applications like a 3D printing slicer.

4. Create a docker-compose.yml file for your operating system:

   ```yaml
   version: '3'
   services:
     os:
       image: <your_dockerhub_username>/<your_image_name>:<tag>
       container_name: remote-desktop-os
       ports:
         - "5900:5900"
         # Add any other necessary ports here if needed (e.g., for VNC or specific applications)
       user: "guest"
       volumes:
         - /path/to/local/data:/Users/guest/Local\ Data
   ```

   Replace `<your_dockerhub_username>`, `<your_image_name>`, and `<tag>` with appropriate values. Change the local data path to your desired location on the Proxmox server where you want to store persistent data.

5. Build and run your container:
   - Navigate to the directory containing the Dockerfile and docker-compose.yml files and run the following command:
     ```
     docker-compose up --build
     ```

6. Connect to the remote desktop using a Remote Desktop client for Windows or macOS, or an VNC viewer like TightVNC or RealVNC for Linux. Use the IP address of your Proxmox server and the port number specified in the docker-compose file (e.g., 5900) as connection settings.

With this setup, you can centralize your persistent workflows like 3D printing slicer configuration without syncing configurations between machines by accessing the remote desktop locally on your Proxmox server.

total duration:       44.786916s
load duration:        8.679666ms
prompt eval count:    69 token(s)
prompt eval duration: 450.302ms
prompt eval rate:     153.23 tokens/s
eval count:           921 token(s)
eval duration:        44.32729225s
eval rate:            20.78 tokens/s

