#!/bin/bash


SCRIPT_DIR() {
  cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd
}

DIR="$(SCRIPT_DIR)"
DIR_BENCHMARK_RESULTS="$DIR/../benchmark/results"
PROMPT="What is 32F in C?"
MODEL="llama3"
SYSTEM_GPU="Unknown"
ollama=""

set_system_gpu() {
  OS="$(uname -s)"

  case "$OS" in
    Linux*)
      # For Linux, list VGA devices (might not directly show the GPU name sometimes)
      lspci | grep -i vga
      ;;
    Darwin*)
      # For macOS, use system_profiler to get display info
      SYSTEM_GPU="$(system_profiler SPDisplaysDataType | grep "Chipset Model" | sed -E 's#.*Chipset.*:[ ]+(.*)#\1#' | tr ' ' '_')"
      ;;
    CYGWIN*|MINGW*|MSYS*)
      # For Windows under a Unix-like shell (Cygwin, Git Bash), use WMIC
      wmic path win32_VideoController get name
      ;;
    *)
      echo "[elm] Unsupported OS: $OS"
      ;;
  esac
}

set_output_filename() {
  local prompt="$(echo -n $PROMPT | sha256sum | awk '{print $1}')"
  local name="${ELM_HOSTNAME:-$(hostname)}"
  filename="$DIR_BENCHMARK_RESULTS/$MODEL-$prompt.$SYSTEM_GPU.$name.log"
}

set_ollama() {
  local path_a="/usr/local/bin/ollama"
  local path_homebrew_macos="/opt/homebrew/bin/ollama"
  local path_windows="/mnt/c/Users/jensbodal/AppData/Local/Programs/Ollama/ollama.exe"
  local path_b="/usr/bin/ollama"
  local path_c="/bin/ollama"
  local path_d="/usr/local/bin/ollama"
  local path_e="/home/linuxbrew/.linuxbrew/bin/ollama"
  local path_macos_idk="/usr/local/bin/ollama"

  if [ -f "$path_a" ]; then
    ollama="$path_a"
  elif [ -f "$path_windows" ]; then
    ollama="$path_windows"
  elif [ -f "$path_homebrew_macos" ]; then
    ollama="$path_homebrew_macos"
  elif [ -f "$path_b" ]; then
    ollama="$path_b"
  elif [ -f "$path_c" ]; then
    ollama="$path_c"
  elif [ -f "$path_d" ]; then
    ollama="$path_d"
  elif [ -f "$path_e" ]; then
    ollama="$path_e"
  elif [ -f "$path_macos_idk" ]; then
    ollama="$path_macos_idk"
  fi
}

setup() {
  mkdir -p "$DIR_BENCHMARK_RESULTS"
  set_system_gpu
  set_ollama
  set_output_filename
  if ! command -v ansifilter 2>&1; then
    brew install ansifilter
  fi
}

setup

if [ "$ollama" = "" ]; then
  echo "Cannot find ollama"
  exit 1
fi

if [ "$filename" = "" ]; then
  echo "Missing filename"
  exit 1
fi

echo "[elm] Outputting results to \"$filename\""
tmp="$(mktemp)"

"$ollama" run phi3 --verbose 2>&1 <<< "42 is? (respond in 20 words or less)" | tee "$tmp"

ansifilter "$tmp" > "$filename"

echo "[elm] DONE"
