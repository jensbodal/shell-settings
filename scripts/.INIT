#!/usr/bin/env bash
# Include in your script with:
# [ ! "$_INIT_COMPLETE" ] && source $HOME/github/shell-settings/scripts/.INIT && export _INIT_COMPLETE=1
# Adds default cleanup function and helper scripts common global variables
# Also ensures that all scripts in scripts folder are available to other scripts here
# @TODO: Ensure that we also include the nodejs/mac/proxmox/etc. scripts where applicable

set -euo pipefail

SCRIPTS_DIR=`cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd`
SHELL_SETTINGS_DIR="$(readlink -f ${SCRIPTS_DIR}/..)"

.SCRIPT_DIR() {
  cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd
}

.SCRIPT_NAME() {
  basename "$0"
}

export PATH="$(.SCRIPT_DIR):$PATH"

trap cleanup EXIT

cleanup() {
  code="$?"

  if [ $code -ne 0 ]; then
    echo "[$code] There was a failure"
    exit $code
  fi

  exit 0
}

log() {
  args=( )
  local log_empty=n
  local include_date=n
  # more complex flags seen here https://stackoverflow.com/a/2875513/679716
  while test $# != 0; do
    case $1 in
      -e|--empty) log_empty=y ;;
      -d|--date) include_date=y ;;
      *)  args+=( "$1" ) ;;
    esac
    shift
  done
  set +u
  set -- "${args[@]}"
  set -u

  if [ "$log_empty" = "y" ]; then
    echo ""
    return 0
  fi

  if [ "$include_date" = "y" ]; then
    printf "[$(date +"%Y-%m-%d_%H%M%S") - $(.SCRIPT_NAME)] $@\n"
    return 0
  fi

  printf "[$(.SCRIPT_NAME)] $@\n"
}

# if non_local_bin_path mise; echo "mise is installed"; fi
non_local_bin_path() {
  # remove shell-settings/script paths from PATH since we care if we have the actual binary available"
  local PATH=`echo $PATH | tr ":" "\n" | sort | uniq | grep -v "shell-settings/script" | tr "\n" ":" | sed 's/.$//'`

  if command -v "$1" > /dev/null 2>&1; then
    return 0
  else
    return 1
  fi
}
