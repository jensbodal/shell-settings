#!/bin/bash

trap 'catch $? $LINENO' EXIT

git_dir=$HOME/github/shell-settings
update_file=~/.config/shell-settings/last_updated

log() {
  echo "[shell-settings-update] $@"
}

catch() {
  local code="$1"
  local line="$2"

  if [ "$code" != "0" ]; then
    log "ERR code [$code] line [$line]"
  fi

  exit $code
}


update_shell_settings() {
  log "updating shell-settings"

  cd $git_dir && \
    git pull origin main --rebase --autostash && \
    date +%s > "$update_file"

  # if ping github.com -c1 -t1 > /dev/null; then
  # else
  #   echo "could not reach github.com"
  # fi
}

since() {
  log "last updated:"
  log "  $diff_seconds seconds ago"
  log "  $diff_minutes minutes ago"
  log "  $diff_hours hours ago"
  log "  $diff_days days ago"
  echo ""
}

UPDATE_SHELL=1
UPDATE_VIM=2
UPDATE_MISE=4

UPDATE_QUICK=3
UPDATE_LONG=4
UPDATE_ALL=7
run-updaters() {
  local updateflags=${1:-0}
  local checkflag=

  # Update shell
  checkflag=$UPDATE_SHELL
  if [ "$(( $checkflag & $updateflags))" = "$checkflag" ]; then
    update_shell_settings
  fi

  # Update shell
  checkflag=$UPDATE_VIM
  if [ "$(( $checkflag & $updateflags))" = "$checkflag" ]; then
    vim +'PlugInstall --sync' +qa
  fi

  # Update shell
  checkflag=$UPDATE_MISE
  if [ "$(( $checkflag & $updateflags))" = "$checkflag" ]; then
    mise up
  fi
}

run() {
  if [ "$1" = "--force" ]; then
    run-updaters $UPDATE_ALL
    return 0
  fi

  if [ -f "$update_file" ]; then
    now=$(date +%s)
    diff_seconds=$((now - `cat $update_file`))
    diff_minutes=$(($diff_seconds / 60))
    diff_hours=$(($diff_minutes / 60))
    diff_days=$(($diff_hours / 24))

    if [ "$1" = "--since" ]; then
      since
      return 0
    fi

    if [ $diff_days -gt 2 ]; then
      if [ ! -d $git_dir ]; then
        log "cannot find \"$git_dir\""
        return 1
      fi

      run-updaters $UPDATE_LONG
    fi

    if [ $diff_days -gt 1 ]; then
      if [ ! -d $git_dir ]; then
        log "cannot find \"$git_dir\""
        return 1
      fi

      since
      run-updaters $UPDATE_QUICK
    fi
  else
    mkdir -p $(dirname "$update_file")
    date +%s > "$update_file"
  fi
}

run "$@"
