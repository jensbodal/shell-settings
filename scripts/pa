#!/bin/bash

trap exit EXIT

DO_KILL=0

BLACK="\033[0;30m"
DARK_GRAY="\033[1;30m"
#RED="\033[0;31m"
LIGHT_RED="\033[1;31m"
#GREEN="\033[0;32m"
LIGHT_GREEN="\033[1;32m"
#BROWN_ORANGE="\033[0;33m"
#YELLOW="\033[0;33m"
# This is supposed to be yellow but it's not, and brown orange looks yellow so....
#YELLOW="\033[1;33m"
BLUE="\033[0;34m"
LIGHT_BLUE="\033[1;34m"
PURPLE="\033[0;35m"
LIGHT_PURPLE="\033[1;35m"
CYAN="\033[0;36m"
LIGHT_CYAN="\033[1;36m"
LIGHT_GRAY="\033[0;37m"
WHITE="\033[1;37m"
NC='\033[0m' # No Color

RED() {
  tput setaf 196
}

GREEN() {
  tput setaf 46
}

YELLOW() {
  tput setaf 220
}

WHITE() {
  tput setaf 15
}

log() {
  echo -e "$(GREEN)[$(WHITE)pa$(GREEN)] $(WHITE)$@${NC}"
}

intro() {
  echo -e "$(GREEN)###################"
  echo -e "$(GREEN)### $(WHITE)ps aux (pa) $(GREEN)###"
  echo -e "$(GREEN)###################"
  echo -e "$NC"
}

hasspaces() {
  echo "${@}" | grep -q -E "[ ]+"
  return $?
}

.processline() {
  local results="${@}"
  local pid="$(echo $results | awk '{print $2}')"
  local process="$(echo $results | awk '{$1=$2=$3=$4=$5=$6=$7=$8=$9=$10=""; print $0}' | sed -E 's#  +##g')"

  log "$(GREEN)[$(YELLOW)$pid$(GREEN)]$(WHITE) $process"
  _pid="${pid}"
}

_pa() {
  intro
  local results=
  local match=""
  local pids=
  local haveresults=0

  # if there are spaces and we have a single argument then there is only one item we are grepping for
  if hasspaces "${@}" && [ $# -eq 1 ]; then
    results="$(ps aux | grep -i "${@}" | grep -v grep | grep -v "/shell-settings/scripts/pa" | grep -v ' vim ' | grep -v ' tail ')"
    pid="$(echo $results | awk '{print $2}')"
    process="$(echo $results | awk '{$1=$2=$3=$4=$5=$6=$7=$8=$9=$10=""; print $0}' | sed -E 's#  +##g')"

    log "$(GREEN)[$(YELLOW)$pid$(GREEN)]$(WHITE) $process"

    pids="$pids $pid"
    haveresults=1
  else
    for arg in "${@}"; do
      results="$(ps aux | grep -i "${arg}" | grep -v grep | grep -v "/shell-settings/scripts/pa" | grep -v ' vim ' | grep -v ' tail ')"

      if (( $(grep -c . <<<"$results") > 1 )); then
        while IFS= read -r line ; do
          .processline "${line}"
          pids="${pids} ${_pid}"
          haveresults=$(($haveresults + 1))
        done <<< "$results"
      elif [ "${results}" != "" ]; then
        pid="$(echo $results | awk '{print $2}')"
        process="$(echo $results | awk '{$1=$2=$3=$4=$5=$6=$7=$8=$9=$10=""; print $0}' | sed -E 's#  +##g')"

        log "$(GREEN)[$(YELLOW)$pid$(GREEN)]$(WHITE) $process"

        pids="$pids $pid"
        haveresults=$(($haveresults + 1))
      fi
    done
  fi

  if [ $haveresults -eq 0 ]; then
    log "No matches found"
    return 0
  fi

  if [ $DO_KILL -eq 1 ]; then
    local pidstokill="$(echo $pids | sed -E 's#^ +(.*[0-9]+) +$#\1#g#')"
    echo "Killing pids: [$pidstokill]"
    echo "$pids" | xargs kill -9
  fi
}

main() {
  if [ "$1" == "-k" ]; then
    DO_KILL=1
    shift
    _pa "${@}"
  else
    _pa "${@}"
  fi
}

main "${@}"
